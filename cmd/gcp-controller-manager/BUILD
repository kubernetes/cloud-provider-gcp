load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_binary",
    "go_library",
    "go_test",
)

go_binary(
    name = "gcp-controller-manager",
    embed = [":gcp-controller-manager_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

load("//defs:container.bzl", "image")

image(
    base = "@distroless//image",
    binary = ":gcp-controller-manager",
)

go_library(
    name = "gcp-controller-manager_lib",
    srcs = [
        "ca_cache.go",
        "csr_signer.go",
        "gcp_config.go",
        "hms.go",
        "istiod_csr_approver.go",
        "kubelet_readonly_csr_approver.go",
        "loops.go",
        "main.go",
        "node_annotator.go",
        "node_csr_approver.go",
        "node_syncer.go",
        "oidc_csr_approver.go",
        "sa_map.go",
        "service_account_verifier.go",
    ],
    importpath = "k8s.io/cloud-provider-gcp/cmd/gcp-controller-manager",
    visibility = [
        "//cmd/gcp-controller-manager:__subpackages__",
    ],
    deps = [
        "//cmd/gcp-controller-manager/dpwi/auth",
        "//cmd/gcp-controller-manager/dpwi/configmap",
        "//cmd/gcp-controller-manager/dpwi/nodesyncer",
        "//cmd/gcp-controller-manager/dpwi/pods",
        "//cmd/gcp-controller-manager/dpwi/serviceaccounts",
        "//cmd/gcp-controller-manager/healthz",
        "//pkg/clientauthplugin/gcp",
        "//pkg/csrmetrics",
        "//pkg/nodeidentity",
        "//pkg/tpmattest",
        "//providers/gce",
        "//vendor/cloud.google.com/go/compute/metadata",
        "//vendor/github.com/google/go-tpm/tpm2",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp",
        "//vendor/github.com/spf13/pflag",
        "//vendor/golang.org/x/oauth2",
        "//vendor/google.golang.org/api/compute/v0.beta:v0_beta",
        "//vendor/google.golang.org/api/compute/v1:compute",
        "//vendor/google.golang.org/api/container/v1:container",
        "//vendor/google.golang.org/api/googleapi",
        "//vendor/gopkg.in/gcfg.v1:gcfg_v1",
        "//vendor/gopkg.in/warnings.v0:warnings_v0",
        "//vendor/k8s.io/api/authorization/v1:authorization",
        "//vendor/k8s.io/api/certificates/v1:certificates",
        "//vendor/k8s.io/api/certificates/v1beta1",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/api/validation",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1/validation",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema",
        "//vendor/k8s.io/apimachinery/pkg/runtime/serializer",
        "//vendor/k8s.io/apimachinery/pkg/types",
        "//vendor/k8s.io/apimachinery/pkg/util/errors",
        "//vendor/k8s.io/apimachinery/pkg/util/runtime",
        "//vendor/k8s.io/apimachinery/pkg/util/validation/field",
        "//vendor/k8s.io/apimachinery/pkg/util/wait",
        "//vendor/k8s.io/apiserver/pkg/authentication/serviceaccount",
        "//vendor/k8s.io/apiserver/pkg/server/options",
        "//vendor/k8s.io/apiserver/pkg/util/feature",
        "//vendor/k8s.io/apiserver/pkg/util/webhook",
        "//vendor/k8s.io/client-go/applyconfigurations/core/v1:core",
        "//vendor/k8s.io/client-go/informers",
        "//vendor/k8s.io/client-go/informers/core/v1:core",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:core",
        "//vendor/k8s.io/client-go/listers/core/v1:core",
        "//vendor/k8s.io/client-go/rest",
        "//vendor/k8s.io/client-go/tools/cache",
        "//vendor/k8s.io/client-go/tools/clientcmd",
        "//vendor/k8s.io/client-go/tools/clientcmd/api",
        "//vendor/k8s.io/client-go/tools/leaderelection",
        "//vendor/k8s.io/client-go/tools/leaderelection/resourcelock",
        "//vendor/k8s.io/client-go/tools/record",
        "//vendor/k8s.io/client-go/util/workqueue",
        "//vendor/k8s.io/component-base/config",
        "//vendor/k8s.io/component-base/config/options",
        "//vendor/k8s.io/component-base/logs",
        "//vendor/k8s.io/component-base/version/verflag",
        "//vendor/k8s.io/controller-manager/pkg/clientbuilder",
        "//vendor/k8s.io/klog/v2:klog",
        "//vendor/k8s.io/kubernetes/pkg/api/legacyscheme",
        "//vendor/k8s.io/kubernetes/pkg/apis/certificates/install",
        "//vendor/k8s.io/kubernetes/pkg/apis/certificates/v1:certificates",
        "//vendor/k8s.io/kubernetes/pkg/controller",
        "//vendor/k8s.io/kubernetes/pkg/controller/certificates",
        "//vendor/k8s.io/kubernetes/pkg/features",
        "//vendor/k8s.io/kubernetes/pkg/util/taints",
    ],
)

go_test(
    name = "gcp-controller-manager_test",
    srcs = [
        "ca_cache_test.go",
        "csr_signer_test.go",
        "gcp_config_test.go",
        "istiod_csr_approver_test.go",
        "kubelet_readonly_csr_approver_test.go",
        "node_annotator_test.go",
        "node_csr_approver_test.go",
        "node_syncer_test.go",
        "oidc_csr_approver_test.go",
        "service_account_verifier_test.go",
    ],
    embed = [":gcp-controller-manager_lib"],
    deps = [
        "//pkg/nodeidentity",
        "//pkg/tpmattest",
        "//vendor/github.com/google/go-cmp/cmp",
        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
        "//vendor/github.com/google/go-tpm/tpm2",
        "//vendor/google.golang.org/api/compute/v0.beta:v0_beta",
        "//vendor/google.golang.org/api/compute/v1:compute",
        "//vendor/google.golang.org/api/container/v1:container",
        "//vendor/k8s.io/api/authorization/v1:authorization",
        "//vendor/k8s.io/api/certificates/v1:certificates",
        "//vendor/k8s.io/api/certificates/v1beta1",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/api/resource",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema",
        "//vendor/k8s.io/apimachinery/pkg/types",
        "//vendor/k8s.io/apimachinery/pkg/util/strategicpatch",
        "//vendor/k8s.io/client-go/kubernetes/fake",
        "//vendor/k8s.io/client-go/listers/core/v1:core",
        "//vendor/k8s.io/client-go/testing",
        "//vendor/k8s.io/client-go/tools/cache",
        "//vendor/k8s.io/client-go/tools/record",
        "//vendor/k8s.io/client-go/util/workqueue",
        "//vendor/k8s.io/klog/v2:klog",
        "//vendor/k8s.io/kubernetes/pkg/apis/certificates/v1:certificates",
        "//vendor/k8s.io/kubernetes/pkg/controller/certificates",
        "//vendor/k8s.io/utils/pointer",
    ],
)
