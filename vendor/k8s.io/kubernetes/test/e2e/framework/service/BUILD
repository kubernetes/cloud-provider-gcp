load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "service",
    srcs = [
        "const.go",
        "jig.go",
        "resource.go",
        "util.go",
        "wait.go",
    ],
    importmap = "k8s.io/cloud-provider-gcp/vendor/k8s.io/kubernetes/test/e2e/framework/service",
    importpath = "k8s.io/kubernetes/test/e2e/framework/service",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/onsi/ginkgo/v2:ginkgo",
        "//vendor/k8s.io/api/apps/v1:apps",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/api/discovery/v1:discovery",
        "//vendor/k8s.io/api/policy/v1:policy",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/labels",
        "//vendor/k8s.io/apimachinery/pkg/util/intstr",
        "//vendor/k8s.io/apimachinery/pkg/util/net",
        "//vendor/k8s.io/apimachinery/pkg/util/sets",
        "//vendor/k8s.io/apimachinery/pkg/util/uuid",
        "//vendor/k8s.io/apimachinery/pkg/util/wait",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/client-go/rest",
        "//vendor/k8s.io/cloud-provider/service/helpers",
        "//vendor/k8s.io/kubernetes/test/e2e/framework",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/deployment",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/network",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/node",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/pod/output",
        "//vendor/k8s.io/kubernetes/test/utils",
        "//vendor/k8s.io/kubernetes/test/utils/image",
        "//vendor/k8s.io/utils/net",
        "//vendor/k8s.io/utils/ptr",
    ],
)
