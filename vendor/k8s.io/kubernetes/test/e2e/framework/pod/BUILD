load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "pod",
    srcs = [
        "create.go",
        "delete.go",
        "dial.go",
        "exec_util.go",
        "get.go",
        "node_selection.go",
        "pod_client.go",
        "resource.go",
        "utils.go",
        "wait.go",
    ],
    importmap = "k8s.io/cloud-provider-gcp/vendor/k8s.io/kubernetes/test/e2e/framework/pod",
    importpath = "k8s.io/kubernetes/test/e2e/framework/pod",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/onsi/ginkgo/v2:ginkgo",
        "//vendor/github.com/onsi/ginkgo/v2/types",
        "//vendor/github.com/onsi/gomega",
        "//vendor/github.com/onsi/gomega/gcustom",
        "//vendor/github.com/onsi/gomega/types",
        "//vendor/k8s.io/api/apps/v1:apps",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/labels",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema",
        "//vendor/k8s.io/apimachinery/pkg/types",
        "//vendor/k8s.io/apimachinery/pkg/util/errors",
        "//vendor/k8s.io/apimachinery/pkg/util/httpstream",
        "//vendor/k8s.io/apimachinery/pkg/util/sets",
        "//vendor/k8s.io/apimachinery/pkg/util/strategicpatch",
        "//vendor/k8s.io/apimachinery/pkg/util/uuid",
        "//vendor/k8s.io/apimachinery/pkg/util/wait",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/client-go/kubernetes/scheme",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:core",
        "//vendor/k8s.io/client-go/rest",
        "//vendor/k8s.io/client-go/tools/portforward",
        "//vendor/k8s.io/client-go/tools/remotecommand",
        "//vendor/k8s.io/client-go/transport/spdy",
        "//vendor/k8s.io/client-go/util/exec",
        "//vendor/k8s.io/klog/v2:klog",
        "//vendor/k8s.io/kubectl/pkg/util/podutils",
        "//vendor/k8s.io/kubernetes/test/e2e/framework",
        "//vendor/k8s.io/kubernetes/test/utils",
        "//vendor/k8s.io/kubernetes/test/utils/format",
        "//vendor/k8s.io/kubernetes/test/utils/image",
        "//vendor/k8s.io/pod-security-admission/api",
        "//vendor/k8s.io/pod-security-admission/policy",
        "//vendor/k8s.io/utils/ptr",
    ],
)
