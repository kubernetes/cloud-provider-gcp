load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "factory",
    srcs = [
        "etcd3.go",
        "factory.go",
    ],
    importmap = "k8s.io/cloud-provider-gcp/vendor/k8s.io/apiserver/pkg/storage/storagebackend/factory",
    importpath = "k8s.io/apiserver/pkg/storage/storagebackend/factory",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
        "//vendor/go.etcd.io/etcd/client/pkg/v3/logutil",
        "//vendor/go.etcd.io/etcd/client/pkg/v3/transport",
        "//vendor/go.etcd.io/etcd/client/v3:client",
        "//vendor/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc",
        "//vendor/go.uber.org/zap",
        "//vendor/go.uber.org/zap/zapcore",
        "//vendor/golang.org/x/time/rate",
        "//vendor/google.golang.org/grpc",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/apimachinery/pkg/util/net",
        "//vendor/k8s.io/apimachinery/pkg/util/runtime",
        "//vendor/k8s.io/apimachinery/pkg/util/wait",
        "//vendor/k8s.io/apiserver/pkg/features",
        "//vendor/k8s.io/apiserver/pkg/server/egressselector",
        "//vendor/k8s.io/apiserver/pkg/storage",
        "//vendor/k8s.io/apiserver/pkg/storage/etcd3",
        "//vendor/k8s.io/apiserver/pkg/storage/etcd3/metrics",
        "//vendor/k8s.io/apiserver/pkg/storage/storagebackend",
        "//vendor/k8s.io/apiserver/pkg/storage/value/encrypt/identity",
        "//vendor/k8s.io/apiserver/pkg/util/feature",
        "//vendor/k8s.io/component-base/metrics/legacyregistry",
        "//vendor/k8s.io/component-base/tracing",
        "//vendor/k8s.io/klog/v2:klog",
    ],
)
