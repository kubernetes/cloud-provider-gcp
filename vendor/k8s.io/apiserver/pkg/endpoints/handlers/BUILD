load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "handlers",
    srcs = [
        "create.go",
        "delete.go",
        "doc.go",
        "get.go",
        "helpers.go",
        "namer.go",
        "patch.go",
        "response.go",
        "rest.go",
        "trace_util.go",
        "update.go",
        "watch.go",
    ],
    importmap = "k8s.io/cloud-provider-gcp/vendor/k8s.io/apiserver/pkg/endpoints/handlers",
    importpath = "k8s.io/apiserver/pkg/endpoints/handlers",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/evanphx/json-patch",
        "//vendor/go.opentelemetry.io/otel/attribute",
        "//vendor/golang.org/x/net/websocket",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
        "//vendor/k8s.io/apimachinery/pkg/api/equality",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/api/meta",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion/scheme",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/internalversion/validation",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1/validation",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1beta1/validation",
        "//vendor/k8s.io/apimachinery/pkg/fields",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema",
        "//vendor/k8s.io/apimachinery/pkg/types",
        "//vendor/k8s.io/apimachinery/pkg/util/httpstream/wsstream",
        "//vendor/k8s.io/apimachinery/pkg/util/managedfields",
        "//vendor/k8s.io/apimachinery/pkg/util/mergepatch",
        "//vendor/k8s.io/apimachinery/pkg/util/net",
        "//vendor/k8s.io/apimachinery/pkg/util/runtime",
        "//vendor/k8s.io/apimachinery/pkg/util/sets",
        "//vendor/k8s.io/apimachinery/pkg/util/strategicpatch",
        "//vendor/k8s.io/apimachinery/pkg/util/validation/field",
        "//vendor/k8s.io/apimachinery/pkg/util/yaml",
        "//vendor/k8s.io/apimachinery/pkg/watch",
        "//vendor/k8s.io/apiserver/pkg/admission",
        "//vendor/k8s.io/apiserver/pkg/audit",
        "//vendor/k8s.io/apiserver/pkg/authorization/authorizer",
        "//vendor/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager",
        "//vendor/k8s.io/apiserver/pkg/endpoints/handlers/finisher",
        "//vendor/k8s.io/apiserver/pkg/endpoints/handlers/metrics",
        "//vendor/k8s.io/apiserver/pkg/endpoints/handlers/negotiation",
        "//vendor/k8s.io/apiserver/pkg/endpoints/handlers/responsewriters",
        "//vendor/k8s.io/apiserver/pkg/endpoints/metrics",
        "//vendor/k8s.io/apiserver/pkg/endpoints/request",
        "//vendor/k8s.io/apiserver/pkg/features",
        "//vendor/k8s.io/apiserver/pkg/registry/rest",
        "//vendor/k8s.io/apiserver/pkg/server/filters",
        "//vendor/k8s.io/apiserver/pkg/storage",
        "//vendor/k8s.io/apiserver/pkg/util/dryrun",
        "//vendor/k8s.io/apiserver/pkg/util/feature",
        "//vendor/k8s.io/apiserver/pkg/warning",
        "//vendor/k8s.io/component-base/tracing",
        "//vendor/k8s.io/klog/v2:klog",
        "//vendor/sigs.k8s.io/json",
    ],
)
