load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "cel",
    srcs = [
        "cel.go",
        "decls.go",
        "env.go",
        "folding.go",
        "inlining.go",
        "io.go",
        "library.go",
        "macro.go",
        "optimizer.go",
        "options.go",
        "program.go",
        "validator.go",
    ],
    importmap = "k8s.io/cloud-provider-gcp/vendor/github.com/google/cel-go/cel",
    importpath = "github.com/google/cel-go/cel",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/cel.dev/expr",
        "//vendor/github.com/google/cel-go/checker",
        "//vendor/github.com/google/cel-go/checker/decls",
        "//vendor/github.com/google/cel-go/common",
        "//vendor/github.com/google/cel-go/common/ast",
        "//vendor/github.com/google/cel-go/common/containers",
        "//vendor/github.com/google/cel-go/common/decls",
        "//vendor/github.com/google/cel-go/common/functions",
        "//vendor/github.com/google/cel-go/common/operators",
        "//vendor/github.com/google/cel-go/common/overloads",
        "//vendor/github.com/google/cel-go/common/stdlib",
        "//vendor/github.com/google/cel-go/common/types",
        "//vendor/github.com/google/cel-go/common/types/pb",
        "//vendor/github.com/google/cel-go/common/types/ref",
        "//vendor/github.com/google/cel-go/common/types/traits",
        "//vendor/github.com/google/cel-go/interpreter",
        "//vendor/github.com/google/cel-go/parser",
        "//vendor/google.golang.org/genproto/googleapis/api/expr/v1alpha1",
        "//vendor/google.golang.org/protobuf/proto",
        "//vendor/google.golang.org/protobuf/reflect/protodesc",
        "//vendor/google.golang.org/protobuf/reflect/protoreflect",
        "//vendor/google.golang.org/protobuf/reflect/protoregistry",
        "//vendor/google.golang.org/protobuf/types/descriptorpb",
        "//vendor/google.golang.org/protobuf/types/dynamicpb",
        "//vendor/google.golang.org/protobuf/types/known/anypb",
    ],
)
